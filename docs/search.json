[
  {
    "objectID": "posts/TidyTuesdayRavelry/index.html",
    "href": "posts/TidyTuesdayRavelry/index.html",
    "title": "TidyTuesdayYarn",
    "section": "",
    "text": "This is where I will be putting a short description of analysis image from: Jean-Marc Vieregge via Unsplash ##Background Describe the tidy tuesday prompt and what the user did - Code borrowed from https://github.com/awalsh17/ravelry_yarns/blob/main/code/explore_yarn.R Why am i interested in this?\nAdd a photo of my projects (in a slide show format)\nCode From : https://github.com/isaacarroyov/tidy_tuesday_R/blob/main/scripts_2022/2022_week-41_ravelry-yarn.R\n\nlibrary(dplyr)\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\nlibrary(tidyverse)\n\n── Attaching packages\n───────────────────────────────────────\ntidyverse 1.3.2 ──\n\n\n✔ ggplot2 3.4.0     ✔ purrr   0.3.4\n✔ tibble  3.1.8     ✔ stringr 1.4.1\n✔ tidyr   1.2.1     ✔ forcats 0.5.2\n✔ readr   2.1.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\n\nlibrary(ggplot2)\nlibrary(MetBrewer)\nlibrary(ggtext)\nlibrary(sysfonts)\nlibrary(showtext)\n\nLoading required package: showtextdb\n\nlibrary(caret)\n\nLoading required package: lattice\n\nAttaching package: 'caret'\n\nThe following object is masked from 'package:purrr':\n\n    lift\n\nlibrary(skimr)\n\n\nyarn <- read_csv('./data/yarn.csv')\n\nWarning: One or more parsing issues, see `problems()` for details\n\n\nRows: 100000 Columns: 24\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (8): name, permalink, texture, yarn_company_name, yarn_weight_knit_gaug...\ndbl (13): gauge_divisor, grams, id, max_gauge, min_gauge, rating_average, ra...\nlgl  (3): discontinued, machine_washable, yarn_weight_crochet_gauge\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nhead(yarn)\n\n# A tibble: 6 × 24\n  discontinued gauge…¹ grams    id machi…² max_g…³ min_g…⁴ name  perma…⁵ ratin…⁶\n  <lgl>          <dbl> <dbl> <dbl> <lgl>     <dbl>   <dbl> <chr> <chr>     <dbl>\n1 FALSE              4   198  2059 TRUE         NA      17 Supe… red-he…    3.58\n2 FALSE              4   170  3330 TRUE         NA      18 Simp… caron-…    4.03\n3 FALSE              4   100   523 NA           20      18 Casc… cascad…    4.48\n4 FALSE              4   100  5741 TRUE         NA      16 Vann… lion-b…    3.87\n5 FALSE              4   100  1666 NA           NA      18 Wors… malabr…    4.73\n6 FALSE              4   100 62569 TRUE         22      18 Rios  malabr…    4.81\n# … with 14 more variables: rating_count <dbl>, rating_total <dbl>,\n#   texture <chr>, thread_size <dbl>, wpi <dbl>, yardage <dbl>,\n#   yarn_company_name <chr>, yarn_weight_crochet_gauge <lgl>,\n#   yarn_weight_id <dbl>, yarn_weight_knit_gauge <chr>, yarn_weight_name <chr>,\n#   yarn_weight_ply <dbl>, yarn_weight_wpi <chr>, texture_clean <chr>, and\n#   abbreviated variable names ¹​gauge_divisor, ²​machine_washable, ³​max_gauge,\n#   ⁴​min_gauge, ⁵​permalink, ⁶​rating_average\n\n\n\n\nShow the code\n# ------ DATAVIZ IDEA ------\n# Back to hacer algo raro:\n# No tengo ni la mas minima idea sobre el tema de yarn, sin embargo es una perfecta \n# oportunidad para hacer una visualizacion poco convencional nada mas por el gusto\n# de crear algo.\n\n# ------ DATA WRANGLING ------\ndf <- yarn %>%\n  select(yarn_company_name, rating_average, rating_count,yarn_weight_name) %>%\n  tidyr::drop_na()\n\n# ------ (creative) DATA VISUALIZATION ------\n\ndf_dataviz <- df %>%\n  group_by(yarn_company_name, yarn_weight_name) %>%\n  summarise(avg_rating_average = mean(rating_average),\n            avg_rating_count = mean(rating_count)) %>%\n  ungroup()\n\n\n`summarise()` has grouped output by 'yarn_company_name'. You can override using\nthe `.groups` argument.\n\n\nShow the code\n# Typography\nfont_add_google(\"Vollkorn\", \"title_font\")\nfont_add_google(\"Raleway\", \"body_font\")\nshowtext_auto()\n\ntitle_font <- \"title_font\"\nbody_font <- \"body_font\"\n\n# Text\ntitle_text <- \"Dots and yarn data\"\nsubtitle_text <- \"There are no mistakes, only happy accidents.<br>Bob Ross\"\ncaption_text <- \"Almost the entire data visualization (the use of points and the colour palette) is inspired by the painting **Notre-Dame-de-la-Garde by Paul Signac** due to the _Pointillist style_.<br>Designed by Isaac Arroyo (@unisaacarroyov on twitter).<br>#TidyTuesday Week 41: Ravelry Yarn via **{ravelRy}**\"\n\n# Chart\np1 <- df_dataviz %>%\n  ggplot(aes(x = avg_rating_count, y = avg_rating_average, colour = yarn_weight_name)) +\n  geom_jitter(width = 0.2, height = 0.1) +\n  scale_x_log10(limits =c(1,1e5)) +\n  scale_colour_manual(values = met.brewer(name = \"Signac\", n = 15)) +\n  coord_polar() +\n  labs(title = title_text, subtitle = subtitle_text, caption = caption_text) +\n  theme_void() +\n  theme(\n    legend.position = \"none\",\n    text = element_text(colour = \"gray90\"),\n    # Title\n    plot.title.position = \"plot\",\n    plot.title = element_textbox(family = title_font,\n                                 face = 'bold',\n                                 lineheight = 0.2,\n                                 size = rel(10),\n                                 width = unit(8,\"in\"),\n                                 margin = margin(0.125,0,0.125,0,\"in\"),\n                                 hjust = 0.5,\n                                 halign = 0.5),\n    # Subtitle\n    plot.subtitle = element_textbox(family = body_font,\n                                    face = 'italic',\n                                    lineheight = 0,\n                                    size = rel(4),\n                                    width = unit(8,\"in\"),\n                                    margin = margin(0,0,-0.5,0,\"in\"),\n                                    hjust = 0.5,\n                                    halign = 0.5),\n    # Caption\n    plot.caption.position = \"plot\",\n    plot.caption = element_textbox(family = body_font,\n                                   lineheight = 0.37,\n                                   size = rel(2),\n                                   width = unit(4,\"in\"),\n                                   margin = margin(-0.5,0,0.125,0,'in'),\n                                   hjust = 0.5,\n                                   halign = 0.5)\n  )\np1\n\n\nWarning: Removed 2128 rows containing missing values (`geom_point()`).\n\n\n\n\n\nShow the code\n#ggsave(filename = \"./gallery_2022/2022_week-41_ravelry-yarn.png\",\n#       plot = p1, bg = \"#07152A\",\n#       width = 8.5, height = 8.5, units = \"in\")\n\n\n\ndf <- yarn %>%\n  select(yarn_company_name, rating_average, rating_count,yarn_weight_name) %>%\n  tidyr::drop_na()\ndf\n\n# A tibble: 87,218 × 4\n   yarn_company_name rating_average rating_count yarn_weight_name\n   <chr>                      <dbl>        <dbl> <chr>           \n 1 Red Heart                   3.58        17616 Aran            \n 2 Caron                       4.03        19133 Aran            \n 3 Cascade Yarns ®             4.48        21517 Worsted         \n 4 Lion Brand                  3.87        13959 Aran            \n 5 Malabrigo Yarn              4.73        20638 Aran            \n 6 Malabrigo Yarn              4.81        20250 Worsted         \n 7 Lily                        4.11        13053 Worsted         \n 8 Cascade Yarns ®             4.42        14828 Worsted         \n 9 Malabrigo Yarn              4.74        18508 Light Fingering \n10 madelinetosh                4.7         15991 Fingering       \n# … with 87,208 more rows\n\n\n\ntop3 = df %>%\n  filter(rating_average == 5.00) %>%\n  group_by(yarn_company_name) %>%\n  summarize(totalnumber = n()) %>%\n  arrange(desc(totalnumber)) %>%\n  filter(totalnumber > 30) %>%\n  head(3)\n\n\ndf %>%\n  filter(rating_average == 5.00) %>%\n  group_by(yarn_company_name) %>%\n  summarize(totalnumber = n()) %>%\n  arrange(desc(totalnumber)) %>%\n  filter(totalnumber > 30) %>%\n  ggplot() +\n  geom_col(aes(y = fct_reorder(yarn_company_name, totalnumber), x = totalnumber), fill = \"grey\") +\n  geom_col(data = top3, aes(y = fct_reorder(yarn_company_name, totalnumber), x = totalnumber), fill = \"darkred\") +\n  labs(\n    title= \"Which Yarn Company has the highest number of perfect ratings?\",\n    x = \"Total Number of 5 star ratings\",\n    y = \"Company Name\"\n  ) +\n  theme_minimal()"
  },
  {
    "objectID": "posts/AvalanceAnalysis/index.html",
    "href": "posts/AvalanceAnalysis/index.html",
    "title": "Avalanche Analysis",
    "section": "",
    "text": "Analysis of Avalanche Incidents and Fatalities in the United States from 1950 to 2022.\nData is available thanks to Colorado Avalanche Information Center (CAIC)\nimage credit: Matea Nikolina via Unsplash ## Avalanche Incidents and Fatality Analysis\n\nTodo\nNote: colors come from the Colorado Avalanche Ice Hockey team flag 1. Change colors 2. Themes 3. Add background information 4. State mountain information\n\n\nBackground\nData from CAIC 2022 1. Describe what is being shown 2. Describe variables being used 3. Describe interest in the analysis\n#Have Avalanche Incidents and Fatalities increased over the years?\n\n\nShow the code\na_year %>%\n  ggplot() + \n  geom_line(aes(x = YYYY, y = count, color = type), linewidth = 1) +\n  labs(title = \"Have Avalanche Incidents and Deaths Increased Over Time?\", \n       x = \"Year\",\n       y = \"Total Events\") +\n  scale_color_manual(values = c(\"#E69F00\", \"#0072B2\"), name = \"Incident Type\", labels = c(\"Death\",\"Avalanche\"))+\n  theme_minimal()\n\n\n\n\n\n\n\nDoes mode of transportation impact the number of accidents?\n\n\nShow the code\naccidents %>%\n  filter(TravelMode %in% c(\"Foot\", \"Ski\", \"Snowboard\", \"Snowshoe\")) %>%\n  group_by(TravelMode) %>%\n  summarize(total_accidents = n(), total_deaths = sum(Killed)) %>%\n  ggplot(aes(x = fct_reorder(TravelMode, desc(total_accidents)), y = total_accidents)) +\n  geom_col() +\n  labs(\n    title= \"Which Mode of Transportation has the Highest Number of Incidents?\",\n    x = \"Travel Type\",\n    y = \"Number of Avalanches\"\n  )+\n  theme_minimal()\n\n\n\n\n\n\n\nShow the code\ntravel_type %>%\n  ggplot() +\n  geom_col(aes(x = fct_reorder(TravelMode, desc(count)), y = count, fill = type), position = \"dodge\") +\n  labs(title = \"What is the distribution of accidents and deaths for the top modes of transportation?\", \n       x = \"Travel Mode\", \n       y = \"Number of Incidents\") +\n  scale_fill_manual(values = c(\"darkgreen\", \"darkred\"), name = \"Incident Type\", labels = c(\"Avalanche\", \"Death\"))\n\n\n\n\n\n\n\nWhich States have highest consentration of Avalanche Accidents?\n\n\nShow the code\naccidents %>%\n  group_by(State) %>%\n  summarize(total_accidents = n()) %>%\n  filter(total_accidents > 1) %>%\n  ggplot() +\n  geom_col(aes(y = total_accidents, x = fct_reorder(State, desc(total_accidents)))) +\n  labs(title = \"Which State has the Highest Number of Avalanches?\",\n       x = \"State\",\n       y = \"Total Accidents\") +\n  theme_minimal()\n\n\n\n\n\n\n\nShow the code\naccidents_state %>%\n  ggplot() +\n  geom_col(aes(x = fct_reorder(State, desc(count)), y = count, fill = type), position = \"dodge\") +\n  labs(title = \"Which State Has the highest number of avalanche incidents?\", \n       x = \"State\", \n       y = \"Number of Incidents\") +\n  scale_fill_manual(values = c(\"darkgreen\", \"darkred\"), name = \"Incident Type\", labels = c(\"Avalanche\", \"Death\")) +\n  theme_minimal()"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Willa’s Portfolio",
    "section": "",
    "text": "TidyTuesdayYarn\n\n\n\nanalysis\n\n\ntidytuesday\n\n\nyarn\n\n\ninterests\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAvalanche Analysis\n\n\n\nanalysis\n\n\nskiing\n\n\ninterests\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About Me",
    "section": "",
    "text": "This is where I will add information about myself"
  }
]